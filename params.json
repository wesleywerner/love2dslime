{"name":"LÖVE SLIME","tagline":"SLIME is a LÖVE library for creating point-and-click adventure games.","body":"# SLIME\r\n\r\nSLIME is a point-and-click adventure game library for L&Ouml;VE. It is inspired by the [SLUDGE game engine](https://opensludge.github.io/).\r\n\r\nThe name is an acronym for \"SLUDGE to L&Ouml;VE Inspired Mimicry Environment\".\r\n\r\n**Status:** In Development  \r\n**Version:** 0.1  \r\n\r\n# Features\r\n\r\n* Animated backgrounds.\r\n* Animated actors with directional movement.\r\n* A Star path finding movement.\r\n\r\n**TODO**  \r\n\r\n* Hotspots - Regions that fires a callback on click.\r\n* Customer cursors.\r\n* Text status bar.\r\n* Actor dialogues.\r\n\r\n---\r\n\r\n# SLIME API\r\n\r\n## Backgrounds\r\n\r\n![func](api/func.png) `slime.background (backgroundfilename, [, delay])`\r\n\r\nAdd a background to the stage. `delay` sets how many milliseconds to display the background if multiple backgrounds are loaded, and may be omitted if only one background is set.\r\n\r\n![func](api/func.png) `slime.floor (floorfilename)`\r\n\r\nSet the floor where actors can walk. This is an image where black (`#000`) indicates non-walkable areas, and any other color for walkable.\r\n\r\n## Layers\r\n\r\nLayers define areas of your background where actors can walk behind.\r\n\r\n![func](api/func.png) `slime.layer (backgroundfilename, maskfilename, baseline)`\r\n\r\nAdd a new layer over the `background` using the `mask` image. The mask is an image with black (`#000`) where there is no layer, or any other colour to indicate a hide-behind layer.\r\n\r\nThe `baseline` is the y-position a character needs to be behind in order to be hidden by the layer.\r\n\r\n## Actors\r\n\r\n![func](api/func.png) `slime.actor (name, x, y, hotspotx, hotspoty)`  \r\n\r\nAdd a new actor to the stage.\r\n\r\n  * The `name` identifies the actor. You can use the same name multiple times, however when calling `moveActor` (which take the name) only the first actor with that name is moved.\r\n  * The `x` and `y` sets the starting position of the actor.\r\n  * The `hotspotx` and `hotspoty` sets the point relative to the `x`/`y`. This point determines when an actor is considered behind a layer baseline. If no hotspot is given, it will default to centered at the base of the sprite.\r\n  \r\nThe cardinal directions are oriented to your screen so that `SOUTH` points to the bottom of your screen, and `NORTH` to the top. So an actor facing `SOUTH` is looking at the player.\r\n\r\n![func](api/func.png) `slime.idleAnimation (actor, tileset, w, h, south, southd [, west, westd, north, northd, east, eastd])`  \r\n![func](api/func.png) `slime.walkAnimation (actor, tileset, w, h, south, southd [, west, westd, north, northd, east, eastd])`  \r\n![func](api/func.png) `slime.talkAnimation (actor, tileset, w, h, south, southd [, west, westd, north, northd, east, eastd])`  \r\n\r\nThese are helper functions that in turn call `addAnimation` with the `keys` \"idle\", \"walk\" and \"talk\" respectively. \r\n\r\n  * The `actor` is an instance create via `slime.actor`\r\n  * The `tileset` is a file name.\r\n  * The `w` and `h` are the width and height of each frame.\r\n  * The `south` and `southd` are the frames and delays for the south-facing animation.\r\n  * The other directions are optional but recommended. `SOUTH` will be used as default if none of the other directions are given.\r\n  \r\nNotes:\r\n\r\n* The `tileset` is a file name to the image tileset, they are cached for re-use. Multiple actors who use the same tileset will re-use the cached copies.\r\n* Only `south` and `southd` parameters are mandatory. If the rest are omitted then south will be used as the default for all directions.\r\n* If a `west` parameter is given, and `east` is `nil` or omitted, then the west animation will automatically be mirrored and used for the `east`.\r\n\r\n![func](api/func.png) `slime.addAnimation (actor, key, tileset, w, h, frames, delays)`  \r\n\r\nThis is for adding custom animations.\r\n\r\n  * The `actor` is an instance create via `slime.actor`\r\n  * The `key` is the animation key.\r\n  * The `w` and `h` are the width and height of each frame.\r\n  * The `frames` and `delays` are the frames and delays for the animation.\r\n\r\n---\r\n\r\n# LICENSE\r\n\r\nThis program is free software: you can redistribute it and/or modify\r\nit under the terms of the GNU General Public License as published by\r\nthe Free Software Foundation, either version 3 of the License, or\r\nany later version.\r\n\r\nThis program is distributed in the hope that it will be useful,\r\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\r\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\nGNU General Public License for more details.\r\n\r\nYou should have received a copy of the GNU General Public License\r\nalong with this program. If not, see http://www.gnu.org/licenses/.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}